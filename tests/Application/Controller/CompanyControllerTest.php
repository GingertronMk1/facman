<?php

namespace App\Tests\Application\Controller;

use App\Application\Company\CompanyFinderException;
use App\Application\Company\CompanyFinderInterface;
use App\Domain\Company\CompanyEntity;
use App\Domain\Company\CompanyRepositoryInterface;
use App\Tests\Application\ApplicationTestCase;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class CompanyControllerTest extends ApplicationTestCase
{
    private CompanyFinderInterface $finder;
    private CompanyRepositoryInterface $repository;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->finder = $this->getContainer()->get(CompanyFinderInterface::class);
        $this->repository = $this->getContainer()->get(CompanyRepositoryInterface::class);
    }

    public function testIndex(): void
    {
        $crawler = $this->client->request(
            'GET',
            $this->router->generate('company.index')
        );

        $this->assertResponseIsSuccessful();
    }

    public function testCreate(): void
    {
        $crawler = $this->client->request(
            'GET',
            $this->router->generate('company.create')
        );
        $testPrefix = 'CTC';

        $this->assertResponseIsSuccessful();
        $form = $crawler->filterXPath('//form[@name=\'create_company_form\']')->form();
        $form->setValues([
            'create_company_form[name]' => 'Create Test Company',
            'create_company_form[prefix]' => $testPrefix,
            'create_company_form[description]' => 'Test Company',

        ]);
        $this->client->submit($form);
        $this->assertResponseRedirects();

        $company = $this->finder->findByPrefix($testPrefix);
        $this->assertEquals($testPrefix, $company->prefix);
    }

    public function testUpdate(): void
    {
        $id = $this->repository->generateId();
        $originalName = 'Update Test Company';
        $originalDescription = 'a description';
        $company = new CompanyEntity(
            id: $id,
            name: $originalName,
            description: $originalDescription,
            prefix: 'UTC'
        );
        $this->repository->store($company);

        $newName = 'Update Test Company Again';
        $newDescription = 'Changed';

        $this->checkForm(
            $this->router->generate('company.update', ['id' => $id]),
            'update_company_form',
            [
                'update_company_form[name]' => $newName,
                'update_company_form[description]' => $newDescription,
            ],
            [
                'update_company_form[name]' => $originalName,
                'update_company_form[description]' => $originalDescription,
            ]
        );
        $this->assertResponseRedirects();

        $company = $this->finder->findById($id);
        $this->assertEquals($newName, $company->name);
        $this->assertEquals($newDescription, $company->description);
    }
}
